{"ast":null,"code":"var _jsxFileName = \"/home/wilder/wild-project/simsons-test/simsons/src/components/QuoteCard.js\";\nimport React from 'react';\nimport './NavBar.css';\nimport axios from 'axios';\nconst nelsonMuntz = {\n  blockquote: 'Shoplifting is a victimless crime, like punching someone in the dark.',\n  cite: \"Nelson Muntz\"\n};\nconst dah = \"no\";\nconst doh = \"su\";\n\nfunction hey() {\n  if (doh === \"su\") {\n    return \"Doh!!\";\n  }\n}\n\nclass QuoteCards extends React.Component {\n  constructor(sim) {\n    super(sim);\n    this.state = {\n      sim: nelsonMuntz\n    };\n  }\n\n  getSim() {\n    // Send the request\n    axios.get('https://thesimpsonsquoteapi.glitch.me/quotes') // Extract the DATA from the received response\n    .then(response => response.data) // Use this data to update the state\n    .then(data => {\n      this.setState({\n        charactere: data.results[0]\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"figure\", {\n      className: \"QuoteCard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: this.image,\n      alt: this.character,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"figcaption\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"blockquote\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, this.quote), /*#__PURE__*/React.createElement(\"cite\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, this.character)));\n  }\n\n}\n\nexport default QuoteCards;","map":{"version":3,"sources":["/home/wilder/wild-project/simsons-test/simsons/src/components/QuoteCard.js"],"names":["React","axios","nelsonMuntz","blockquote","cite","dah","doh","hey","QuoteCards","Component","constructor","sim","state","getSim","get","then","response","data","setState","charactere","results","render","image","character","quote"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,WAAW,GAAG;AAChBC,EAAAA,UAAU,EAAG,uEADG;AAEhBC,EAAAA,IAAI,EAAG;AAFS,CAApB;AAIA,MAAMC,GAAG,GAAG,IAAZ;AACA,MAAMC,GAAG,GAAG,IAAZ;;AACA,SAASC,GAAT,GAAe;AAEb,MAAID,GAAG,KAAK,IAAZ,EAAiB;AAEf,WAAO,OAAP;AACD;AAEF;;AAED,MAAME,UAAN,SAAyBR,KAAK,CAACS,SAA/B,CAAwC;AACtCC,EAAAA,WAAW,CAACC,GAAD,EAAM;AACjB,UAAMA,GAAN;AACA,SAAKC,KAAL,GAAa;AACXD,MAAAA,GAAG,EAAET;AADM,KAAb;AAID;;AACDW,EAAAA,MAAM,GAAG;AACP;AACAZ,IAAAA,KAAK,CAACa,GAAN,CAAU,8CAAV,EACE;AADF,KAEGC,IAFH,CAEQC,QAAQ,IAAIA,QAAQ,CAACC,IAF7B,EAIE;AAJF,KAKGF,IALH,CAKQE,IAAI,IAAI;AACZ,WAAKC,QAAL,CAAc;AACZC,QAAAA,UAAU,EAAEF,IAAI,CAACG,OAAL,CAAa,CAAb;AADA,OAAd;AAGH,KATD;AAUD;;AACCC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAQ,MAAA,SAAS,EAAC,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAK,MAAA,GAAG,EAAE,KAAKC,KAAf;AAAsB,MAAA,GAAG,EAAE,KAAKC,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAa,KAAKC,KAAlB,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAO,KAAKD,SAAZ,CAFF,CAFA,CADF;AASD;;AA/BqC;;AAoCxC,eAAef,UAAf","sourcesContent":["import React from 'react';\nimport './NavBar.css';\nimport axios from 'axios';\n\nconst nelsonMuntz = {\n    blockquote : 'Shoplifting is a victimless crime, like punching someone in the dark.',\n    cite : \"Nelson Muntz\",\n    }\nconst dah = \"no\"\nconst doh = \"su\";\nfunction hey() {\n\n  if (doh === \"su\"){\n\n    return \"Doh!!\";\n  }\n\n}\n\nclass QuoteCards extends React.Component{\n  constructor(sim) {\n  super(sim);\n  this.state = {\n    sim: nelsonMuntz,\n\n  }\n}\ngetSim() {\n  // Send the request\n  axios.get('https://thesimpsonsquoteapi.glitch.me/quotes')\n    // Extract the DATA from the received response\n    .then(response => response.data)\n\n    // Use this data to update the state\n    .then(data => {\n      this.setState({\n        charactere: data.results[0],\n      });\n  });\n}\n  render() {\n    return (\n      <figure className=\"QuoteCard\">\n      <img src={this.image} alt={this.character} />\n      <figcaption>\n        <blockquote>{this.quote}</blockquote>\n        <cite>{this.character}</cite>\n      </figcaption>\n    </figure>\n    )\n  }\n\n\n}\n\nexport default QuoteCards;\n"]},"metadata":{},"sourceType":"module"}